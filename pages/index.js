import React, { useState, useEffect } from "react";
import Head from "next/head";
import Image from "next/image";
import Logo from "../public/images/logo.png";
import BackImg from "../public/images/picture.png";
import { useRouter } from "next/router";
import { useSelector, useDispatch } from "react-redux";
import { signUp, signIn } from "../redux/authSlice";

export default function Auth() {
  const [register, setRegister] = useState(false);
  const [name, setName] = useState("");
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState({});
  const [rememberMe, setRememberMe] = useState(false);
  const router = useRouter();
  const authError = useSelector((state) => state.error);
  const token = useSelector((state) => state.token);
  const dispatch = useDispatch();

  const handleFormSubmit = (e) => {
    e.preventDefault();
    const newError = validate();
    if (Object.keys(newError).length === 0) {
      if (register) {
        dispatch(signUp({ email, name, password }));
      } else {
        dispatch(signIn({ email, password, rememberMe }));
      }

      setName("");
      setEmail("");
      setPassword("");
      setError({});
      setRegister(false);
      setRememberMe(false);
    } else {
      setError(newError);
    }
  };
  const validate = () => {
    const error = {};
    if (!(email.includes("@") && email.includes(".com"))) {
      error.message = "Please enter a valid email address!";
    } else if (password.length < 6 || password.length > 20) {
      error.message = "Password must be between 6 and 20 characters!";
    }
    return error;
  };
  useEffect(() => {
    if (token) {
      router.push("/home");
    }
  }, [router, token]);

  return (
    <>
      <Head>
        <title>Book Store</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex w-full h-screen overflow-hidden">
        {/* image */}
        <Image
          className="w-[100%] h-[100%] object-fill"
          src={BackImg}
          alt="logo"
        />
        {/* form */}
        <div
          className="flex flex-col w-[100%] justify-around
        "
        >
          <Image
            className="w-[120px] h-[78px] my-[40px] mx-auto"
            src={Logo}
            alt="logo"
          />
          <>
            <div className="my-[15px] mx-[220px]">
              <h3 className="text-[#09093999] text-[24px] font-[600]">
                Welcome Back!
              </h3>
              <h1 className="text-[#090937] text-[32px] font-[700]">
                Login to your account
              </h1>
            </div>
            <form
              onSubmit={handleFormSubmit}
              className="flex flex-col mt-[15px] mx-auto"
            >
              {error.message ||
                (authError && (
                  <span className="text-red-600 mb-1 text-base">
                    {error.message ? error.message : authError}
                  </span>
                ))}
              {register && (
                <>
                  <label
                    className="text-[20px] font-[600] mb-[10px]"
                    htmlFor="name"
                  >
                    Name
                  </label>
                  <input
                    className="bg-[#F4F4FF] p-[16px] w-[400px]  rounded-[4px] mt-0 mx-auto mb-[15px]"
                    type="text"
                    name="name"
                    id="name"
                    placeholder="John Doe"
                    value={name}
                    onChange={(e) => setName(e.target.value)}
                    required
                  />
                </>
              )}
              <label
                className="text-[20px] font-[600] mb-[10px]"
                htmlFor="email"
              >
                Email
              </label>
              <input
                className="bg-[#F4F4FF] p-[14px] w-[400px] rounded-[4px] mt-0 mx-auto mb-[15px]"
                type="email"
                name="email"
                id="email"
                placeholder="john@email.com"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
                required
              />
              <label
                className="text-[20px] font-[600] mb-[10px]"
                htmlFor="password"
              >
                Password
              </label>
              <input
                className="bg-[#F4F4FF] p-[16px] w-[400px] rounded-[4px] mt-0 mx-auto mb-[15px]"
                type="password"
                name="password"
                id="password"
                placeholder="*******"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                required
              />
              {!register && (
                <div className="flex mt-[-4px] mx-0 mb-[16px] text-[#6251DD] text-[16px] font-[600] cursor-pointe">
                  <input
                    className="cursor-pointer"
                    type="checkbox"
                    checked={rememberMe}
                    onChange={() => setRememberMe(!rememberMe)}
                  />
                  <label className="ml-[7px]" htmlFor="">
                    Remember me
                  </label>
                </div>
              )}

              <div className="flex flex-col items-center mt-[20px] mx-auto mb-[40px] w-[100%]">
                <button
                  className="border-none text-[#F4F4FF] bg-[#EF6B4A] py-[10px] px-[20px] mb-[5px] text-[24px] font-[600] w-[400px] h-[60px] cursor-pointer rounded-[4px] text-center flex justify-center items-center"
                  type="submit"
                >
                  {register ? "Register" : "Login"}
                </button>
                <button
                  className="border-2 border-[#6251DD] text-[#6251DD] bg-[#F4F4FF] py-[10px] px-[20px] mt-[5px] text-[24px] font-[600] w-[400px] h-[60px] cursor-pointer rounded-[4px] text-center flex justify-center items-center"
                  onClick={() => setRegister(!register)}
                >
                  {register ? "Login" : "Register"}
                </button>
              </div>
            </form>
          </>
        </div>
      </div>
    </>
  );
}
